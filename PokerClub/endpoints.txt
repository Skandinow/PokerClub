enum TableCondition {

}

enum PlayerCondition {
    Passed, Waiting, Moving
}

enum Suit {
    _, _, _, _
}

Card {
    value: int
    suit: Suit
}

Player {
    name: String
    (Nullable) hand: [Card, Card] int ____ in db
    condition: PlayerCondition
    passive_balance: int
    active_balance: int
    bank_bid: int
    current_bid: int
    (Nullable) win: int
    (id in db)
    (roomId in db)
}

RoomInfo {
    step: int
    condition: TableCondition
    (Nullable) cards: String, где одна карта - трехзначное число, сепаратор :
    players: [(Nullable) Player, ...]
    bank: int
    small_blind: int
    blind_position: int
}

---

GET
/api/v0/rooms/{room_id}/step
getRoomStep -> int

GET
/api/v0/rooms/{room_id}/info
getRoomInfo -> RoomInfo


CREATE TABLE players (
	id uuid NOT NULL GENERATED ALWAYS AS IDENTITY,
	room_id uuid NULL,
	name varchar NULL,
	passive_balance bigserial not NULL,
	active_balance serial not NULL,
	current_bid serial not NULL,
	chair_place _int2 NULL
);


